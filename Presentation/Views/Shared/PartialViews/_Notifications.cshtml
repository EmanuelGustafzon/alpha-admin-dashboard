@{
    var userRole = User.FindFirstValue(ClaimTypes.Role) ?? "User";
}

<div class="popover-container">
    <button data-open-pop-over data-targetId="#notifications-popover" class="bell btn-clean ">
        <div id="has-notifications" class=""></div>
        <i class="bi bi-bell-fill"></i>
    </button>
    <div id="notifications-popover" class="popover popover-wide d-none">
        <div class="border-bottom flex space-between">
            <h4>Notifications</h4>
            <p id="notification-count" class="notification-count">0</p>
        </div>
        <div id="notifications"></div>
    </div>
</div>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/notificationHub")
        .build();

    connection.on("generalNotifications", (notification) => {
        updateNotificationList(notification)
    })
    connection.start().catch(error => console.log(error));

    function updateNotificationList(notification) {
        const notificationsList = document.querySelector('#notifications');
        const item = notificationItem(notification.id, notification.icon, notification.message, notification.created, notification.action)
        notificationsList.insertAdjacentHTML('beforeend', item)
    }
    function hasNotificatons(memberHasNotification) {
        const redCircle = document.querySelector('#has-notifications');
        if(memberHasNotification) {
            redCircle.classList.add("new-notification")
        } else {
            redCircle.classList.remove("new-notification")
        } 
    }
    function incramentNotificationCount() {
        let count = document.querySelector('#notification-count');
        let intCount = parseInt(count.innerText)
        count.innerText = ++intCount
    }
    function decramentNotificationCount() {
        let count = document.querySelector('#notification-count');
        let intCount = parseInt(count.innerText)
        if(count === 1) hasNotificatons(false)
        count.innerText = --intCount
    }
    async function getNotifications() {
        const data = await fetchData("/api/notifications")
        if(data.length != 0) hasNotificatons(true)
        data.forEach(notification => {
            updateNotificationList(notification)
            incramentNotificationCount()
        })
    }
    async function dismissNotification(id) {
        const result = await sendDataAsQuery(`/api/notifications/dissmiss/${id}`, false);
        if(result === false) return;
        decramentNotificationCount()
        removeNotification(id)
    }
    function removeNotification(id) {
        const item = document.querySelector(`[data-id="${id}"]`)
        item.remove()
    }
    function notificationItem(id, image, message, createdAt, action = null)
    {
        return `
            <div class="notification" data-id="${id}">
                <img class="profile-img" src="${image}"/>
                <div>
                    <p class="message">${message}</p>
                    ${action ? `<a href="${action}">Click here!</a>` : ''}
                    <p class="time" data-created="${new Date(createdAt).toISOString()}"> ${timeAgo(createdAt)} </p>
                </div>
                <button onclick="dismissNotification('${id}')" class="btn btn-clean">X</button>
            </div>
        `;
    }
    window.addEventListener('DOMContentLoaded', () => {
        getNotifications();
    })
</script>


@if (userRole == "Admin")
{
    @section Scripts {
    <script>
        $(function () {
            connection.on("adminNotifications", function (notification) {
                updateNotificationList(notification);
            });
        });
    </script>
    }
}
