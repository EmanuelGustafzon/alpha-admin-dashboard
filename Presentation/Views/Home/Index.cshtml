@model ProjectViewModel
@{
    ViewData["Title"] = "Projects";
}
<div class="projects-top-bar">
    <h2>Projects</h2>
    <button data-targetId="#add-project" data-openModal="true" class="btn btn-primary ">+ Add Project</button>
</div>
<div class="filter-projects">
    <div class="active-filter tab-link">
        <p>ALL[8]</p>
    </div>
    <div class="nav-link">
        <p>STARTED[4]</p>
    </div>
    <div class="nav-link">
        <p>COMPLETED[2]</p>
    </div>
</div>
<div id="projects-view" class="projects-view">
    @foreach(var project in Model.Projects) {
        <div class="projects-view">
            <div class="project-card">
                <div>
                    <img class="project-img" src="@project.ImageUrl" alt="">
                </div>
                <div class="project-card-headings">
                    <h6 class="project-name">@project.ProjectName</h6>
                    <p class="org-name">@project.Client.ClientName</p>
                </div>
                <div class="project-card-settings">
                    <div class="popover-container">
                        <button><i class="bi bi-three-dots"></i></button>
                        <div class="popover">
                            <p>Edit</p>
                            <p>Add Member</p>
                            <p>Delete</p>
                        </div>
                    </div>
                </div>
                <div class="project-card-content">
                    <p>@Html.Raw(project.Description)</p>
                </div>
                <div class="label project-countdown">
                    <i class="bi bi-clock-fill"> <span>1 week left</span></i>
                </div>
                <div class="project-members">
                    @foreach(var member in project.Members) {
                        <img class="profile-img-small" src="@member.ImageUrl"/> 
                    }
                </div>
            </div>
        </div>
    } 
</div>

@await Html.PartialAsync("PartialViews/_AddProject", Model)

<script>
    fetchData("https://localhost:8081/home/projects", "projects-view");

        async function fetchData(url, containerId) {
        try {
            const response = await fetch(url);
            if (!response.ok) {
                throw new Error(`Response status: ${response.status}`);
            }
            const data = await response.json();
            const container = document.getElementById(containerId);
            data.forEach(item => {
                console.log(item)
            });
        } catch (error) {
            console.error(error.message);
        }
    }
</script>



